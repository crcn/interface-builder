{
  "id": "53138fe9121",
  "version": "1.0.1",
  "metadata": {},
  "name": "module",
  "children": [
    {
      "label": "Text Preview",
      "is": "div",
      "style": [
        {
          "key": "display",
          "value": "flex"
        },
        {
          "key": "flex-direction",
          "value": "column"
        }
      ],
      "attributes": [],
      "id": "5c9686b814979",
      "name": "component",
      "children": [
        {
          "id": "5c9686b815472",
          "label": "Banner",
          "is": "div",
          "name": "element",
          "attributes": [],
          "style": [
            {
              "key": "box-sizing",
              "value": "border-box"
            },
            {
              "key": "display",
              "value": "flex"
            },
            {
              "key": "align-items",
              "value": "center"
            },
            {
              "key": "justify-content",
              "value": "space-between"
            },
            {
              "key": "padding-left",
              "value": "8px"
            },
            {
              "key": "padding-top",
              "value": "8px"
            },
            {
              "key": "padding-right",
              "value": "8px"
            },
            {
              "key": "padding-bottom",
              "value": "8px"
            },
            {
              "key": "background",
              "value": "rgba(88, 185, 255, 1)"
            },
            {
              "key": "flex-shrink",
              "value": "0"
            }
          ],
          "children": [
            {
              "id": "5c9686b848542",
              "name": "text",
              "label": "Text",
              "value": "You're viewing this file in read-only mode. ",
              "style": [
                {
                  "key": "color",
                  "value": "rgba(255, 255, 255, 1)"
                },
                {
                  "key": "font-weight",
                  "value": "600"
                },
                {
                  "key": "user-select",
                  "value": "none"
                },
                {
                  "key": "cursor",
                  "value": "default"
                }
              ],
              "children": [],
              "metadata": {},
              "styleMixins": {
                "dc3b39eb1275": {
                  "priority": 0
                }
              }
            },
            {
              "id": "5c9686b856345",
              "label": "cta",
              "is": "div",
              "name": "element",
              "attributes": [],
              "style": [
                {
                  "key": "box-sizing",
                  "value": "border-box"
                },
                {
                  "key": "display",
                  "value": "inline-block"
                }
              ],
              "children": [
                {
                  "id": "5c9686b857183",
                  "is": "9f364d2139415",
                  "label": "open text editor button",
                  "name": "component-instance",
                  "attributes": [],
                  "style": [
                    {
                      "key": "background",
                      "value": "rgba(255, 255, 255, 1)"
                    },
                    {
                      "key": "white-space",
                      "value": "nowrap"
                    }
                  ],
                  "children": [
                    {
                      "id": "5c9686b858034",
                      "targetIdPath": [
                        "9f364d2139650"
                      ],
                      "value": [
                        {
                          "key": "font-size",
                          "value": "10px"
                        },
                        {
                          "key": "color",
                          "value": "rgba(88, 185, 255, 1)"
                        },
                        {
                          "key": "font-weight",
                          "value": "600"
                        }
                      ],
                      "name": "override",
                      "children": [],
                      "type": "add-style-block"
                    },
                    {
                      "id": "5c9686b859225",
                      "variantId": null,
                      "targetIdPath": [
                        "9f364d2139650"
                      ],
                      "value": "Open in Text Editor",
                      "name": "override",
                      "children": [],
                      "type": "text"
                    }
                  ],
                  "metadata": {
                    "bounds": {
                      "left": 300,
                      "top": 120,
                      "right": 400,
                      "bottom": 220
                    }
                  },
                  "variant": {}
                }
              ],
              "metadata": {}
            }
          ],
          "metadata": {}
        },
        {
          "id": "5c9686b870134",
          "label": "content",
          "is": "div",
          "name": "element",
          "attributes": [],
          "style": [
            {
              "key": "box-sizing",
              "value": "border-box"
            },
            {
              "key": "display",
              "value": "block"
            },
            {
              "key": "position",
              "value": "relative"
            },
            {
              "key": "height",
              "value": "0"
            },
            {
              "key": "flex-grow",
              "value": "1"
            },
            {
              "key": "padding-left",
              "value": "8px"
            },
            {
              "key": "padding-top",
              "value": "8px"
            },
            {
              "key": "padding-right",
              "value": "8px"
            },
            {
              "key": "padding-bottom",
              "value": "8px"
            },
            {
              "key": "word-break",
              "value": "break-word"
            }
          ],
          "children": [
            {
              "id": "5c9686b871035",
              "label": "inner",
              "is": "div",
              "name": "element",
              "attributes": [],
              "style": [
                {
                  "key": "box-sizing",
                  "value": "border-box"
                },
                {
                  "key": "display",
                  "value": "block"
                },
                {
                  "key": "height",
                  "value": "100%"
                },
                {
                  "key": "width",
                  "value": "100%"
                },
                {
                  "key": "overflow",
                  "value": "scroll"
                }
              ],
              "children": [
                {
                  "id": "6abb1348453",
                  "name": "text",
                  "label": "Text",
                  "value": "import \"./index.scss\";\nimport * as React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { FileCacheItem, getFileCacheItemDataUrl } from \"fsbox\";\nexport type TextEditorProps = {\n  fileCacheItem: FileCacheItem;\n  dispatch: Dispatch<any>;\n};\n\nexport class TextEditorWindow extends React.PureComponent<\nTextEditorProps\n> {\n  render() {\n    const { fileCacheItem } = this.props;\n    return (\n      <div className=\"m-text-editor\">\n        <div dangerouslySetInnerHTML={{__html: fileCacheItem && formatText(fileCacheItem.content.toString(\"utf8\"))}}>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst formatText = (text: string) => {\n  return text.replace(/\\n/g, `<br>`).replace(/\\s/g, `&nbsp;&nbsp;`).replace(/\\t/g, `&nbsp;&nbsp;&nbsp;&nbsp;`)\n};\n\nimport \"./index.scss\";\nimport * as React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { FileCacheItem, getFileCacheItemDataUrl } from \"fsbox\";\n\nexport type TextEditorProps = {\n  fileCacheItem: FileCacheItem;\n  dispatch: Dispatch<any>;\n};\n\nexport class TextEditorWindow extends React.PureComponent<\nTextEditorProps\n> {\n  render() {\n    const { fileCacheItem } = this.props;\n    return (\n      <div className=\"m-text-editor\">\n        <div dangerouslySetInnerHTML={{__html: fileCacheItem && formatText(fileCacheItem.content.toString(\"utf8\"))}}>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst formatText = (text: string) => {\n  return text.replace(/\\n/g, `<br>`).replace(/\\s/g, `&nbsp;&nbsp;`).replace(/\\t/g, `&nbsp;&nbsp;&nbsp;&nbsp;`)\n};\nimport \"./index.scss\";\nimport * as React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { FileCacheItem, getFileCacheItemDataUrl } from \"fsbox\";\n\nexport type TextEditorProps = {\n  fileCacheItem: FileCacheItem;\n  dispatch: Dispatch<any>;\n};\n\nexport class TextEditorWindow extends React.PureComponent<\nTextEditorProps\n> {\n  render() {\n    const { fileCacheItem } = this.props;\n    return (\n      <div className=\"m-text-editor\">\n        <div dangerouslySetInnerHTML={{__html: fileCacheItem && formatText(fileCacheItem.content.toString(\"utf8\"))}}>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst formatText = (text: string) => {\n  return text.replace(/\\n/g, `<br>`).replace(/\\s/g, `&nbsp;&nbsp;`).replace(/\\t/g, `&nbsp;&nbsp;&nbsp;&nbsp;`)\n};\nimport \"./index.scss\";\nimport * as React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { FileCacheItem, getFileCacheItemDataUrl } from \"fsbox\";\n\nexport type TextEditorProps = {\n  fileCacheItem: FileCacheItem;\n  dispatch: Dispatch<any>;\n};\n\nexport class TextEditorWindow extends React.PureComponent<\nTextEditorProps\n> {\n  render() {\n    const { fileCacheItem } = this.props;\n    return (\n      <div className=\"m-text-editor\">\n        <div dangerouslySetInnerHTML={{__html: fileCacheItem && formatText(fileCacheItem.content.toString(\"utf8\"))}}>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst formatText = (text: string) => {\n  return text.replace(/\\n/g, `<br>`).replace(/\\s/g, `&nbsp;&nbsp;`).replace(/\\t/g, `&nbsp;&nbsp;&nbsp;&nbsp;`)\n};\nimport \"./index.scss\";\nimport * as React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { FileCacheItem, getFileCacheItemDataUrl } from \"fsbox\";\n\nexport type TextEditorProps = {\n  fileCacheItem: FileCacheItem;\n  dispatch: Dispatch<any>;\n};\n\nexport class TextEditorWindow extends React.PureComponent<\nTextEditorProps\n> {\n  render() {\n    const { fileCacheItem } = this.props;\n    return (\n      <div className=\"m-text-editor\">\n        <div dangerouslySetInnerHTML={{__html: fileCacheItem && formatText(fileCacheItem.content.toString(\"utf8\"))}}>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst formatText = (text: string) => {\n  return text.replace(/\\n/g, `<br>`).replace(/\\s/g, `&nbsp;&nbsp;`).replace(/\\t/g, `&nbsp;&nbsp;&nbsp;&nbsp;`)\n};\nimport \"./index.scss\";\nimport * as React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { FileCacheItem, getFileCacheItemDataUrl } from \"fsbox\";\n\nexport type TextEditorProps = {\n  fileCacheItem: FileCacheItem;\n  dispatch: Dispatch<any>;\n};\n\nexport class TextEditorWindow extends React.PureComponent<\nTextEditorProps\n> {\n  render() {\n    const { fileCacheItem } = this.props;\n    return (\n      <div className=\"m-text-editor\">\n        <div dangerouslySetInnerHTML={{__html: fileCacheItem && formatText(fileCacheItem.content.toString(\"utf8\"))}}>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst formatText = (text: string) => {\n  return text.replace(/\\n/g, `<br>`).replace(/\\s/g, `&nbsp;&nbsp;`).replace(/\\t/g, `&nbsp;&nbsp;&nbsp;&nbsp;`)\n};\n",
                  "style": [],
                  "children": [],
                  "metadata": {}
                }
              ],
              "metadata": {}
            }
          ],
          "metadata": {}
        }
      ],
      "metadata": {
        "bounds": {
          "left": 0,
          "top": 0,
          "right": 281,
          "bottom": 400
        }
      },
      "variant": {}
    }
  ]
}